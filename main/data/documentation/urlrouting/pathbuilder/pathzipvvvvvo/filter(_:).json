{"sections":[],"metadata":{"extendedModule":"Parsing","modules":[{"name":"URLRouting"}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"filter"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO6FilterV","text":"Filter"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:7Parsing6ParserPAAE6filteryAA7ParsersO6FilterVy_xGSb6OutputQzcF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B9ZipVVVVVOV","title":"filter(_:)","role":"symbol"},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVVO\/filter(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"filter"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Filter","preciseIdentifier":"s:7Parsing7ParsersO6FilterV","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/Filter"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"A parser that filters its output."}],"type":"paragraph"}]},{"kind":"parameters","parameters":[{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes an output from this parser and returns a Boolean"},{"type":"text","text":" "},{"type":"text","text":"value indicating whether the output should be returned."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"text":"This method is similar to ","type":"text"},{"code":"Sequence.filter","type":"codeVoice"},{"text":" in the Swift standard library, as well as","type":"text"},{"text":" ","type":"text"},{"code":"Publisher.filter","type":"codeVoice"},{"text":" in the Combine framework.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This parser fails if the predicate is not satisfied on the output of the upstream parser. For example,","type":"text"},{"text":" ","type":"text"},{"text":"the following parser consumes only even integers and so fails when an odd integer is used:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["var input = \"43 Hello, world!\"[...]","let number = try Int.parser().filter { $0.isMultiple(of: 2) }.parse(&input)","\/\/ error: processed value 43 failed to satisfy predicate","\/\/  --> input:1:1-2","\/\/ 1 | 43 Hello, world!","\/\/   | ^^ processed input"],"type":"codeListing"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/filter(_:)"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVVO","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVVO\/Parser-Implementations"]]},"abstract":[{"text":"Returns a parser that filters output from this parser when its output does not satisfy the","type":"text"},{"text":" ","type":"text"},{"text":"given predicate.","type":"text"}],"references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVVVVVO/filter(_:)":{"type":"topic","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/filter(_:)","kind":"symbol","abstract":[{"type":"text","text":"Returns a parser that filters output from this parser when its output does not satisfy the"},{"type":"text","text":" "},{"type":"text","text":"given predicate."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVVO\/filter(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"filter","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO6FilterV","text":"Filter"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"title":"filter(_:)","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVVVVVO":{"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVVO","role":"symbol","type":"topic","navigatorTitle":[{"text":"PathZipVVVVVO","kind":"identifier"}],"title":"PathBuilder.PathZipVVVVVO","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathZipVVVVVO","kind":"identifier"}],"abstract":[]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"title":"Parsers","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"url":"\/documentation\/parsing\/parsers","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"role":"symbol","url":"\/documentation\/urlrouting\/pathbuilder","navigatorTitle":[{"text":"PathBuilder","kind":"identifier"}],"abstract":[{"type":"text","text":"A custom parameter attribute that constructs path component parsers from closures. The"},{"type":"text","text":" "},{"type":"text","text":"constructed parser runs a number of parsers against each patch component, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and accumulates their outputs."}],"kind":"symbol","title":"PathBuilder","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathBuilder","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"title":"URLRouting","role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","abstract":[{"type":"text","text":"A bidirectional URL router with more type safety and less fuss. This library is built with "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},{"type":"text","text":"."}],"url":"\/documentation\/urlrouting","type":"topic"},"http://github.com/pointfreeco/swift-parsing":{"type":"link","title":"Parsing","titleInlineContent":[{"type":"text","text":"Parsing"}],"url":"http:\/\/github.com\/pointfreeco\/swift-parsing","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVVVVVO/Parser-Implementations":{"type":"topic","title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVVO\/Parser-Implementations","role":"collectionGroup","kind":"article","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvvo\/parser-implementations","abstract":[]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/Filter":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Filter","kind":"identifier"}],"navigatorTitle":[{"text":"Filter","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/Filter","url":"\/documentation\/parsing\/parsers\/filter","title":"Parsers.Filter","role":"symbol","abstract":[{"text":"A parser that filters the output of an upstream parser when it does not satisfy a predicate.","type":"text"}],"kind":"symbol","type":"topic"}}}