{"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParserPrinter"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing16AnyParserPrinterV","text":"AnyParserPrinter","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"code":"AnyParserPrinter","type":"codeVoice"},{"text":" wrapping this parser-printer.","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This form of ","type":"text"},{"inlineContent":[{"type":"text","text":"type erasure"}],"type":"emphasis"},{"text":" preserves abstraction across API boundaries, such as different","type":"text"},{"text":" ","type":"text"},{"text":"modules.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"When you expose your composed parser-printers as the ","type":"text"},{"code":"AnyParserPrinter","type":"codeVoice"},{"text":" type, you can change","type":"text"},{"text":" ","type":"text"},{"text":"the underlying implementation over time without affecting existing clients.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Equivalent to passing ","type":"text"},{"type":"codeVoice","code":"self"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"AnyParserPrinter\/init(_:)"},{"text":".","type":"text"}]}]}],"sections":[],"abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/erasetoanyparserprinter()"]}],"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVO\/eraseToAnyParserPrinter()","interfaceLanguage":"swift"},"metadata":{"symbolKind":"method","role":"symbol","roleHeading":"Instance Method","extendedModule":"Parsing","externalID":"s:7Parsing13ParserPrinterPAAE010eraseToAnybC0AA0fbC0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B8ZipVVVVOV","modules":[{"name":"URLRouting"}],"title":"eraseToAnyParserPrinter()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParserPrinter","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing16AnyParserPrinterV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVO","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVO\/ParserPrinter-Implementations"]]},"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/AnyParserPrinter":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParserPrinter"}],"abstract":[{"text":"A type-erased parser-printer of ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"AnyParserPrinter"}],"title":"AnyParserPrinter","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/anyparserprinter","type":"topic"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"role":"symbol","url":"\/documentation\/urlrouting\/pathbuilder","navigatorTitle":[{"text":"PathBuilder","kind":"identifier"}],"abstract":[{"type":"text","text":"A custom parameter attribute that constructs path component parsers from closures. The"},{"type":"text","text":" "},{"type":"text","text":"constructed parser runs a number of parsers against each patch component, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and accumulates their outputs."}],"kind":"symbol","title":"PathBuilder","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathBuilder","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVVVVO/eraseToAnyParserPrinter()":{"role":"symbol","title":"eraseToAnyParserPrinter()","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/erasetoanyparserprinter()","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVO\/eraseToAnyParserPrinter()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Parsing16AnyParserPrinterV","kind":"typeIdentifier","text":"AnyParserPrinter"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVVVVO/ParserPrinter-Implementations":{"title":"ParserPrinter Implementations","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo\/parserprinter-implementations","abstract":[],"role":"collectionGroup","kind":"article","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVO\/ParserPrinter-Implementations"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVVVVO":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathZipVVVVO"}],"abstract":[],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvo","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVO","title":"PathBuilder.PathZipVVVVO","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PathZipVVVVO"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"title":"URLRouting","role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","abstract":[{"type":"text","text":"A bidirectional URL router with more type safety and less fuss. This library is built with "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},{"type":"text","text":"."}],"url":"\/documentation\/urlrouting","type":"topic"},"http://github.com/pointfreeco/swift-parsing":{"title":"Parsing","titleInlineContent":[{"text":"Parsing","type":"text"}],"type":"link","url":"http:\/\/github.com\/pointfreeco\/swift-parsing","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"}}}