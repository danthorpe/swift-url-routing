{"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOOO","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOOO\/Parser-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/erasetoanyparser()"]}],"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOOO\/eraseToAnyParser()","interfaceLanguage":"swift"},"abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","modules":[{"name":"URLRouting"}],"roleHeading":"Instance Method","externalID":"s:7Parsing6ParserPAAE010eraseToAnyB0AA0eB0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B8ZipVOOOOV","symbolKind":"method","extendedModule":"Parsing","title":"eraseToAnyParser()"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AnyParser"},{"type":"text","text":" wrapping this parser."}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This form of ","type":"text"},{"inlineContent":[{"type":"text","text":"type erasure"}],"type":"emphasis"},{"text":" preserves abstraction across API boundaries, such as different","type":"text"},{"text":" ","type":"text"},{"text":"modules.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you expose your composed parsers as the "},{"type":"codeVoice","code":"AnyParser"},{"type":"text","text":" type, you can change the underlying"},{"type":"text","text":" "},{"type":"text","text":"implementation over time without affecting existing clients."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Equivalent to passing "},{"type":"codeVoice","code":"self"},{"type":"text","text":" to "},{"type":"codeVoice","code":"AnyParser.init"},{"type":"text","text":"."}]}]}],"kind":"symbol","references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVOOOO/Parser-Implementations":{"role":"collectionGroup","title":"Parser Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOOO\/Parser-Implementations","type":"topic","kind":"article","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/parser-implementations"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVOOOO/eraseToAnyParser()":{"title":"eraseToAnyParser()","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOOO\/eraseToAnyParser()","role":"symbol","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo\/erasetoanyparser()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","kind":"symbol","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVOOOO":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathZipVOOOO","kind":"identifier"}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvoooo","navigatorTitle":[{"text":"PathZipVOOOO","kind":"identifier"}],"abstract":[],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOOOO","kind":"symbol","title":"PathBuilder.PathZipVOOOO"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"role":"symbol","url":"\/documentation\/urlrouting\/pathbuilder","navigatorTitle":[{"text":"PathBuilder","kind":"identifier"}],"abstract":[{"type":"text","text":"A custom parameter attribute that constructs path component parsers from closures. The"},{"type":"text","text":" "},{"type":"text","text":"constructed parser runs a number of parsers against each patch component, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and accumulates their outputs."}],"kind":"symbol","title":"PathBuilder","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathBuilder","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"title":"URLRouting","role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","abstract":[{"type":"text","text":"A bidirectional URL router with more type safety and less fuss. This library is built with "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},{"type":"text","text":"."}],"url":"\/documentation\/urlrouting","type":"topic"},"http://github.com/pointfreeco/swift-parsing":{"type":"link","title":"Parsing","titleInlineContent":[{"text":"Parsing","type":"text"}],"url":"http:\/\/github.com\/pointfreeco\/swift-parsing","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyParser":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"}],"title":"AnyParser","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParser","abstract":[{"type":"text","text":"A type-erased parser of "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"url":"\/documentation\/parsing\/anyparser","navigatorTitle":[{"text":"AnyParser","kind":"identifier"}],"type":"topic"}}}