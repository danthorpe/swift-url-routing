{"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"match"},{"kind":"text","text":"("},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URLRequest","preciseIdentifier":"s:20FoundationNetworking10URLRequestV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Output"}],"roleHeading":"Instance Method","title":"match(request:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"URLRequestData"},{"text":".","type":"text"}]},"externalID":"s:7Parsing6ParserP10URLRoutingAD14URLRequestDataV5InputRtzrlE5match7request6OutputQz20FoundationNetworking0D0V_tKF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B9ZipOVOVVOV","extendedModule":"Parsing","symbolKind":"method","modules":[{"name":"URLRouting"}]},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOVVO\/match(request:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/match(request:)"]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"match","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:20FoundationNetworking10URLRequestV","text":"URLRequest","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOVVO","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOVVO\/Parser-Implementations"]]},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Parser.match(request:)"},{"type":"text","text":"."}],"references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"role":"symbol","url":"\/documentation\/urlrouting\/pathbuilder","navigatorTitle":[{"text":"PathBuilder","kind":"identifier"}],"abstract":[{"type":"text","text":"A custom parameter attribute that constructs path component parsers from closures. The"},{"type":"text","text":" "},{"type":"text","text":"constructed parser runs a number of parsers against each patch component, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and accumulates their outputs."}],"kind":"symbol","title":"PathBuilder","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathBuilder","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"title":"URLRouting","role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","abstract":[{"type":"text","text":"A bidirectional URL router with more type safety and less fuss. This library is built with "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},{"type":"text","text":"."}],"url":"\/documentation\/urlrouting","type":"topic"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOVOVVO":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathZipOVOVVO"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOVVO","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo","navigatorTitle":[{"kind":"identifier","text":"PathZipOVOVVO"}],"kind":"symbol","role":"symbol","title":"PathBuilder.PathZipOVOVVO","abstract":[],"type":"topic"},"http://github.com/pointfreeco/swift-parsing":{"type":"link","titleInlineContent":[{"type":"text","text":"Parsing"}],"title":"Parsing","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","url":"http:\/\/github.com\/pointfreeco\/swift-parsing"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOVOVVO/Parser-Implementations":{"kind":"article","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/parser-implementations","title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOVVO\/Parser-Implementations","abstract":[],"role":"collectionGroup","type":"topic"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOVOVVO/match(request:)":{"type":"topic","kind":"symbol","title":"match(request:)","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOVVO\/match(request:)","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipovovvo\/match(request:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"match","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:20FoundationNetworking10URLRequestV","text":"URLRequest","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"URLRequestData","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[]}}}