{"abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"sections":[],"metadata":{"modules":[{"name":"URLRouting"}],"title":"replaceError(with:)","roleHeading":"Instance Method","extendedModule":"Parsing","externalID":"s:7Parsing6ParserPAAE12replaceError4withAA7ParsersO07ReplaceD0Vy_xG6OutputQz_tF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B7ZipOVOOV","symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"text":".","kind":"text"},{"text":"ReplaceError","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOO","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOO\/Parser-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"output","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/ReplaceError","text":"ReplaceError","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"text":"A parser that never fails.","type":"text"}],"type":"paragraph"}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"An output to return should the upstream parser fail.","type":"text"}],"type":"paragraph"}],"name":"output"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Useful for providing a default output for a parser."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, we could create a parser that parses a plus or minus sign and maps the result to"},{"type":"text","text":" "},{"type":"text","text":"a positive or negative multiplier respectively, or else defaults to a positive multiplier:"}]},{"type":"codeListing","syntax":"swift","code":["let sign = OneOf {","  \"+\".map { 1 }","  \"-\".map { -1 }","}",".replaceError(with: 1)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Notably this parser is non-throwing:"}]},{"type":"codeListing","syntax":"swift","code":["var input = \"-123\"[...]","","\/\/ No `try` required:","sign.parse(&input)  \/\/ -1","input               \/\/ \"123\"","","\/\/ Simply returns the default when parsing fails:","sign.parse(&input)  \/\/ 1"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This means it can be used to turn throwing parsers into non-throwing ones, which is important"},{"type":"text","text":" "},{"type":"text","text":"for building up complex parsers that cannot fail."}]}]}],"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOO\/replaceError(with:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/replaceerror(with:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"title":"Parsers","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"url":"\/documentation\/parsing\/parsers","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"role":"symbol","url":"\/documentation\/urlrouting\/pathbuilder","navigatorTitle":[{"text":"PathBuilder","kind":"identifier"}],"abstract":[{"type":"text","text":"A custom parameter attribute that constructs path component parsers from closures. The"},{"type":"text","text":" "},{"type":"text","text":"constructed parser runs a number of parsers against each patch component, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and accumulates their outputs."}],"kind":"symbol","title":"PathBuilder","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathBuilder","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"title":"URLRouting","role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","abstract":[{"type":"text","text":"A bidirectional URL router with more type safety and less fuss. This library is built with "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing"},{"type":"text","text":"."}],"url":"\/documentation\/urlrouting","type":"topic"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOVOO":{"abstract":[],"title":"PathBuilder.PathZipOVOO","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOO","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathZipOVOO","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo","navigatorTitle":[{"text":"PathZipOVOO","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/ReplaceError":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReplaceError"}],"title":"Parsers.ReplaceError","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/ReplaceError","abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"url":"\/documentation\/parsing\/parsers\/replaceerror","navigatorTitle":[{"kind":"identifier","text":"ReplaceError"}],"type":"topic"},"http://github.com/pointfreeco/swift-parsing":{"titleInlineContent":[{"type":"text","text":"Parsing"}],"type":"link","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","url":"http:\/\/github.com\/pointfreeco\/swift-parsing","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOVOO/Parser-Implementations":{"kind":"article","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOO\/Parser-Implementations","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/parser-implementations","role":"collectionGroup","title":"Parser Implementations","abstract":[],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOVOO/replaceError(with:)":{"type":"topic","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipovoo\/replaceerror(with:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOVOO\/replaceError(with:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ReplaceError","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"role":"symbol","title":"replaceError(with:)"}}}