{"metadata":{"modules":[{"name":"CasePaths"}],"roleHeading":"Function","title":"extract(case:from:)","symbolKind":"func","externalID":"s:9CasePaths7extract4case4fromq_SgxSgq_c_AFtr0_lF","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"extract","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"case"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"platforms":[]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"extract"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"case"},{"kind":"text","text":" "},{"kind":"internalParam","text":"embed"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"text":" (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"root","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Values if they can be extracted from the given enum case initializer and root enum,"},{"type":"text","text":" "},{"type":"text","text":"otherwise "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An enum case initializer."}]}],"name":"embed"},{"content":[{"type":"paragraph","inlineContent":[{"text":"A root enum value.","type":"text"}]}],"name":"root"}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"syntax":"swift","code":["extract(case: Result<Int, Error>.success, from: .success(42))","\/\/ 42","extract(case: Result<Int, Error>.success, from: .failure(MyError())","\/\/ nil"],"type":"codeListing"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This function is only intended to be used with enum case initializers. Its behavior is"},{"type":"text","text":" "},{"type":"text","text":"otherwise undefined."}]}],"type":"aside"}],"kind":"content"}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/casepaths\/extract(case:from:)-82wth"]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use case path literal syntax (e.g., '\/Root.caseName'), or '(\/Root.caseName).extract(from:)'","type":"text"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/CasePaths\/extract(case:from:)-82wth"},"abstract":[{"type":"text","text":"Attempts to extract values associated with a given enum case initializer from a given root enum."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/CasePaths"]]},"references":{"doc://co.pointfree.URLRouting/documentation/CasePaths":{"abstract":[],"kind":"symbol","role":"collection","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/CasePaths","url":"\/documentation\/casepaths","title":"CasePaths","type":"topic"},"doc://co.pointfree.URLRouting/documentation/CasePaths/extract(case:from:)-82wth":{"type":"topic","role":"symbol","title":"extract(case:from:)","deprecated":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/CasePaths\/extract(case:from:)-82wth","url":"\/documentation\/casepaths\/extract(case:from:)-82wth","abstract":[{"type":"text","text":"Attempts to extract values associated with a given enum case initializer from a given root enum."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"extract"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"case"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}]}}}