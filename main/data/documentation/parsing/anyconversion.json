{"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyConversion","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"This conversion forwards its "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/apply(_:)"},{"type":"text","text":" and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/unapply(_:)"},{"type":"text","text":" methods to an arbitrary"},{"type":"text","text":" "},{"type":"text","text":"underlying conversion having the same "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" types, hiding the specifics of the"},{"type":"text","text":" "},{"type":"text","text":"underlying "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"AnyConversion"},{"type":"text","text":" to wrap a conversion whose type has details you don’t want to expose across"},{"type":"text","text":" "},{"type":"text","text":"API boundaries, such as different modules. When you use type erasure this way, you can change"},{"type":"text","text":" "},{"type":"text","text":"the underlying conversion over time without affecting existing clients."}],"type":"paragraph"},{"inlineContent":[{"type":"codeVoice","code":"AnyConversion"},{"text":" can also be useful for experimenting with ad hoc conversions in a lightweight","type":"text"},{"text":" ","type":"text"},{"text":"manner. One can avoid the upfront ceremony of defining a whole new type and instead create a","type":"text"},{"text":" ","type":"text"},{"text":"“conformance” inline by specifying the ","type":"text"},{"type":"codeVoice","code":"apply"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"unapply"},{"text":" functions directly","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["Prefix { $0.isNumber }","  .map(","    AnyConversion(","      apply: { Int(String($0)) },","      unapply: { String($0)[...] {","    )","  )","","\/\/ vs.","","struct SubstringToInt: Conversion {","  func apply(_ input: Substring) throws -> Int {","    guard let int = Int(String(input)) else {","      struct ConvertingError: Error {}","      throw ConvertingError()","    }","    return int","  }","","  func unapply(_ output: Int) -> Substring {","    String(output)[...]","  }","}","","Prefix { $0.isNumber }","  .map(SubstringToInt())"],"syntax":"swift"},{"inlineContent":[{"text":"If performance is a consideration of your parser-printer, you should avoid ","type":"text"},{"code":"AnyConversion","type":"codeVoice"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"text":"instead create custom types that conform to the ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","type":"reference","isActive":true},{"text":" protocol.","type":"text"}],"type":"paragraph"}]}],"metadata":{"symbolKind":"struct","navigatorTitle":[{"text":"AnyConversion","kind":"identifier"}],"modules":[{"name":"Parsing"}],"role":"symbol","roleHeading":"Structure","title":"AnyConversion","externalID":"s:7Parsing13AnyConversionV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AnyConversion","kind":"identifier"}]},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion"],"title":"Conforms To","type":"conformsTo"}],"abstract":[{"text":"A type-erased ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","isActive":true,"type":"reference"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/anyconversion"]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/init(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/init(apply:unapply:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/apply(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/unapply(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/Conversion-Implementations"],"title":"Default Implementations","generated":true}],"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.URLRouting/documentation/Parsing":{"url":"\/documentation\/parsing","abstract":[],"role":"collection","kind":"symbol","type":"topic","title":"Parsing","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversion":{"url":"\/documentation\/parsing\/conversion","abstract":[{"type":"text","text":"Declares a type that can transform an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"text":" value ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"and","type":"text"}]},{"text":" transform an","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value back into an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"title":"Conversion","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyConversion/init(_:)":{"kind":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a type-erasing conversion to wrap the given conversion."}],"role":"symbol","title":"init(_:)","url":"\/documentation\/parsing\/anyconversion\/init(_:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/init(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyConversion/apply(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"apply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/apply(_:)","url":"\/documentation\/parsing\/anyconversion\/apply(_:)","title":"apply(_:)","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Attempts to transform an input into an output.","type":"text"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyConversion":{"url":"\/documentation\/parsing\/anyconversion","role":"symbol","type":"topic","title":"AnyConversion","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyConversion","kind":"identifier"}],"abstract":[{"type":"text","text":"A type-erased "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion"},{"text":".","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"AnyConversion","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyConversion/Conversion-Implementations":{"url":"\/documentation\/parsing\/anyconversion\/conversion-implementations","role":"collectionGroup","type":"topic","title":"Conversion Implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/Conversion-Implementations","abstract":[],"kind":"article"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyConversion/unapply(_:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/unapply(_:)","role":"symbol","url":"\/documentation\/parsing\/anyconversion\/unapply(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unapply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"title":"unapply(_:)","abstract":[{"text":"Attempts to transform an output back into an input.","type":"text"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyConversion/init(apply:unapply:)":{"kind":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"apply","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"unapply","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"abstract":[{"text":"Creates a conversion that wraps the given closures in its ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/apply(_:)","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/unapply(_:)","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"methods, throwing an error when ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" is returned.","type":"text"}],"role":"symbol","title":"init(apply:unapply:)","url":"\/documentation\/parsing\/anyconversion\/init(apply:unapply:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion\/init(apply:unapply:)"}}}