{"metadata":{"title":"Always","externalID":"s:7Parsing6AlwaysV","symbolKind":"struct","roleHeading":"Structure","navigatorTitle":[{"text":"Always","kind":"identifier"}],"role":"symbol","modules":[{"name":"Parsing"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Always","kind":"identifier"}]},"variants":[{"paths":["\/documentation\/parsing\/always"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"A parser that always succeeds with the given value, and does not consume any input.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Always","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"text":"While not very useful on its own, the ","type":"text"},{"code":"Always","type":"codeVoice"},{"text":" parser can be helpful when combined with other","type":"text"},{"text":" ","type":"text"},{"text":"parsers or operators.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"When its ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":", it can be used as a “no-op” parser of sorts and be plugged into","type":"text"},{"text":" ","type":"text"},{"text":"other parser operations. For example, the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Many","type":"reference"},{"text":" parser can be configured with separator and","type":"text"},{"text":" ","type":"text"},{"text":"terminator parsers:","type":"text"}],"type":"paragraph"},{"code":["Many {","  Int.parser()","} separator: {","  \",\"","} terminator: {","  End()","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"But also exposes initializers that omit these parsers when there is no separator or terminator"},{"type":"text","text":" "},{"type":"text","text":"to be parsed:"}],"type":"paragraph"},{"code":["Many {","  Prefix { $0 != \"\\n\" }","  \"\\n\"","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"To support this, ","type":"text"},{"type":"codeVoice","code":"Many"},{"text":" plugs ","type":"text"},{"type":"codeVoice","code":"Always<Input, Void>"},{"text":" into each omitted parser. As a simplified","type":"text"},{"text":" ","type":"text"},{"text":"example:","type":"text"}],"type":"paragraph"},{"code":["struct Many<Element: Parser, Separator: Parser, Terminator: Parser>: Parser","where Separator.Input == Element.Input, Terminator.Input == Element.Input {","  ...","}","","extension Many where Separator == Always<Input, Void>, Terminator == Always<Input, Void> {","  init(@ParserBuilder element: () -> Element) {","    self.element = element()","    self.separator = Always(())","    self.terminator = Always(())","  }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"This means the previous example is equivalent to:"}],"type":"paragraph"},{"code":["Many {","  Prefix { $0 != \"\\n\" }","  \"\\n\"","} separator: {","  Always(())","} terminator: {","  Always(())","}"],"type":"codeListing","syntax":"swift"},{"content":[{"inlineContent":[{"text":"While ","type":"text"},{"code":"Always","type":"codeVoice"},{"text":" can be used as the last alternative of a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/OneOf","type":"reference"},{"text":" to specify a default","type":"text"},{"text":" ","type":"text"},{"text":"output, the resulting parser will be throwing. Instead, prefer ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/replaceError(with:)","type":"reference"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"which returns a non-throwing parser.","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/init(_:)-2spg2","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/init(_:)-56hez","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/init(_:)-fdjh"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/output"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/parse(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/print(_:into:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/ParserPrinter-Implementations"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always"},"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"]}],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Always/ParserPrinter-Implementations":{"type":"topic","title":"ParserPrinter Implementations","abstract":[],"kind":"article","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/always\/parserprinter-implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/Always/parse(_:)":{"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"url":"\/documentation\/parsing\/always\/parse(_:)","kind":"symbol","title":"parse(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/parse(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Always/output":{"type":"topic","role":"symbol","abstract":[],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/parsing\/always\/output","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/output","title":"output"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"url":"\/documentation\/parsing","abstract":[],"role":"collection","kind":"symbol","type":"topic","title":"Parsing","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"url":"\/documentation\/parsing\/parserprinter","abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"role":"symbol","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"title":"ParserPrinter","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"},"doc://co.pointfree.URLRouting/documentation/Parsing/Always/init(_:)-2spg2":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/parsing\/always\/init(_:)-2spg2","role":"symbol","kind":"symbol","title":"init(_:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/init(_:)-2spg2","abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser"},"doc://co.pointfree.URLRouting/documentation/Parsing/OneOf":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOf"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/OneOf","url":"\/documentation\/parsing\/oneof","navigatorTitle":[{"kind":"identifier","text":"OneOf"}],"kind":"symbol","role":"symbol","title":"OneOf","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers till one succeeds."}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Always/init(_:)-fdjh":{"type":"topic","abstract":[],"title":"init(_:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":")"}],"role":"symbol","url":"\/documentation\/parsing\/always\/init(_:)-fdjh","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/init(_:)-fdjh","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://co.pointfree.URLRouting/documentation/Parsing/Many":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Many","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"navigatorTitle":[{"text":"Many","kind":"identifier"}],"title":"Many","role":"symbol","type":"topic","abstract":[{"text":"A parser that attempts to run another parser as many times as specified, accumulating the result","type":"text"},{"text":" ","type":"text"},{"text":"of the outputs.","type":"text"}],"url":"\/documentation\/parsing\/many","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Always/Parser-Implementations":{"url":"\/documentation\/parsing\/always\/parser-implementations","abstract":[],"role":"collectionGroup","title":"Parser Implementations","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/Parser-Implementations","kind":"article"},"doc://co.pointfree.URLRouting/documentation/Parsing/Always/print(_:into:)":{"url":"\/documentation\/parsing\/always\/print(_:into:)","title":"print(_:into:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/print(_:into:)","role":"symbol","abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data into something more nebulous."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Always/init(_:)-56hez":{"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":")"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always\/init(_:)-56hez","title":"init(_:)","abstract":[],"url":"\/documentation\/parsing\/always\/init(_:)-56hez","type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Always":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Always"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Always","url":"\/documentation\/parsing\/always","navigatorTitle":[{"kind":"identifier","text":"Always"}],"kind":"symbol","role":"symbol","title":"Always","abstract":[{"type":"text","text":"A parser that always succeeds with the given value, and does not consume any input."}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser/replaceError(with:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/replaceError(with:)","url":"\/documentation\/parsing\/parser\/replaceerror(with:)","kind":"symbol","role":"symbol","title":"replaceError(with:)","abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"type":"topic"}}}