{"variants":[{"paths":["\/documentation\/parsing\/conversions\/bytestodata\/case(_:)-7aheb"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"extendedModule":"Parsing","role":"symbol","symbolKind":"method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Values","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"case(_:)","roleHeading":"Type Method","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing10ConversionPAAE4casey9CasePaths0D4PathVyqd_0_qd__Gqd_0_qd__cAHRszr0_lFZ::SYNTHESIZED::s:7Parsing11ConversionsO11BytesToDataV"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Values","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"initializer","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/CasePaths\/CasePath","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A conversion that can embed the associated values of an enum case into the case,"},{"type":"text","text":" "},{"type":"text","text":"and extract the associated values from the case."}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"An embed function where "},{"type":"codeVoice","code":"Values"},{"type":"text","text":" directly maps to the memory"},{"type":"text","text":" "},{"type":"text","text":"layout of "},{"type":"codeVoice","code":"Enum"},{"type":"text","text":", for example the internal, default initializer that is automatically"},{"type":"text","text":" "},{"type":"text","text":"synthesized for structs."}],"type":"paragraph"}],"name":"embed"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Useful for transforming the output of a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"},{"type":"text","text":" into an enum:"}],"type":"paragraph"},{"code":["enum Expression {","  case add(Int, Int)","  ...","}","","let add = ParsePrint(.case(Expression.add)) {","  Int.parser()","  \"+\"","  Int.parser()","}","try add.parse(\"1+2\")  \/\/ Expression.add(1, 2)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"To transform the output of a ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","isActive":true,"type":"reference"},{"text":" into a struct, see ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BytesToData\/memberwise(_:)","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BytesToData","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BytesToData\/Conversion-Implementations"]]},"abstract":[{"text":"Converts the associated values of an enum case into the case, and an enum case into its","type":"text"},{"text":" ","type":"text"},{"text":"associated values.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BytesToData\/case(_:)-7aheb","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.URLRouting/documentation/CasePaths/CasePath":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/CasePaths\/CasePath","title":"CasePath","type":"topic","abstract":[{"text":"A path that supports embedding a value in a root and attempting to extract a root’s embedded","type":"text"},{"text":" ","type":"text"},{"text":"value.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/casepaths\/casepath","navigatorTitle":[{"kind":"identifier","text":"CasePath"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CasePath"}]},"doc://co.pointfree.URLRouting/documentation/Parsing":{"url":"\/documentation\/parsing","abstract":[],"role":"collection","kind":"symbol","type":"topic","title":"Parsing","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"url":"\/documentation\/parsing\/parserprinter","abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"role":"symbol","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"title":"ParserPrinter","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/BytesToData":{"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BytesToData","role":"symbol","navigatorTitle":[{"text":"BytesToData","kind":"identifier"}],"title":"Conversions.BytesToData","url":"\/documentation\/parsing\/conversions\/bytestodata","abstract":[{"type":"text","text":"A conversion from a "},{"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrependableCollection","isActive":true},{"type":"text","text":" of UTF-8 bytes to "},{"code":"Data","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BytesToData","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/BytesToData/memberwise(_:)":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BytesToData\/memberwise(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"memberwise","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Values","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Struct","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Struct","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/conversions\/bytestodata\/memberwise(_:)","title":"memberwise(_:)","abstract":[{"text":"A conversion from a tuple of values into a struct and a struct into a tuple of values, using a","type":"text"},{"text":" ","type":"text"},{"text":"memberwise initializer.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/BytesToData/Conversion-Implementations":{"title":"Conversion Implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BytesToData\/Conversion-Implementations","type":"topic","url":"\/documentation\/parsing\/conversions\/bytestodata\/conversion-implementations","abstract":[],"kind":"article","role":"collectionGroup"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions":{"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions","title":"Conversions","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/conversions","abstract":[{"type":"text","text":"A namespace for types that serve as conversions."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}],"navigatorTitle":[{"text":"Conversions","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/PrependableCollection":{"title":"PrependableCollection","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrependableCollection","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrependableCollection","abstract":[{"text":"A collection that supports empty initialization and the ability to prepend a sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements of elements to itself.","type":"text"}],"url":"\/documentation\/parsing\/prependablecollection","role":"symbol","navigatorTitle":[{"text":"PrependableCollection","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/BytesToData/case(_:)-7aheb":{"type":"topic","abstract":[{"type":"text","text":"Converts the associated values of an enum case into the case, and an enum case into its"},{"type":"text","text":" "},{"type":"text","text":"associated values."}],"url":"\/documentation\/parsing\/conversions\/bytestodata\/case(_:)-7aheb","title":"case(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`case`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Values"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Enum"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Values"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Enum"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BytesToData\/case(_:)-7aheb","kind":"symbol"}}}