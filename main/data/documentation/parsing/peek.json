{"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Peek"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Upstream"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","text":"Parser","preciseIdentifier":"s:7Parsing6ParserP"}],"platforms":["Linux"]}]},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"text":"It lets the upstream parser “peek” into the input without consuming it.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, identifiers (variables, functions, etc.) in Swift allow the first character to be a"},{"type":"text","text":" "},{"type":"text","text":"letter or underscore, but not a digit, but subsequent characters can be digits. "},{"type":"emphasis","inlineContent":[{"type":"text","text":"E.g."}]},{"type":"text","text":", "},{"code":"foo123","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"is a valid identifier, but "},{"code":"123foo","type":"codeVoice"},{"type":"text","text":" is not. We can create an identifier parser by using "},{"code":"Peek","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"to first check if the input starts with a letter or underscore, and if it does, return the"},{"type":"text","text":" "},{"type":"text","text":"remainder of the input up to the first character that is not a letter, a digit, or an"},{"type":"text","text":" "},{"type":"text","text":"underscore."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let identifier = Parse {","  Peek { Prefix(1) { $0.isLetter || $0 == \"_\" } }","  Prefix { $0.isNumber || $0.isLetter || $0 == \"_\" }","}","","try identifier.parse(\"foo123\") \/\/ ✅ \"foo123\"","try identifier.parse(\"_foo123\") \/\/ ✅ \"_foo123\"","try identifier.parse(\"1_foo123\") \/\/ ❌","\/\/ error: unexpected input","\/\/  --> input:1:1","\/\/ 1 | 1_foo123","\/\/   | ^ expected 1 element satisfying predicate"]}],"kind":"content"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/init(_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/upstream"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/parse(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/print(_:into:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/ParserPrinter-Implementations"],"title":"Default Implementations"}],"abstract":[{"type":"text","text":"A parser that runs the given parser, but does not consume any input."}],"variants":[{"paths":["\/documentation\/parsing\/peek"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek"},"metadata":{"modules":[{"name":"Parsing"}],"symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"Peek"}],"title":"Peek","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Peek"}],"roleHeading":"Structure","externalID":"s:7Parsing4PeekV","role":"symbol"},"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser"},"doc://co.pointfree.URLRouting/documentation/Parsing/Peek/upstream":{"url":"\/documentation\/parsing\/peek\/upstream","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"upstream","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"}],"abstract":[],"role":"symbol","kind":"symbol","title":"upstream","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/upstream"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"url":"\/documentation\/parsing\/parserprinter","abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"role":"symbol","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"title":"ParserPrinter","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"},"doc://co.pointfree.URLRouting/documentation/Parsing/Peek":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Peek"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek","url":"\/documentation\/parsing\/peek","navigatorTitle":[{"kind":"identifier","text":"Peek"}],"kind":"symbol","role":"symbol","title":"Peek","abstract":[{"type":"text","text":"A parser that runs the given parser, but does not consume any input."}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Peek/Parser-Implementations":{"type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/Parser-Implementations","role":"collectionGroup","kind":"article","title":"Parser Implementations","url":"\/documentation\/parsing\/peek\/parser-implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/Peek/parse(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"url":"\/documentation\/parsing\/peek\/parse(_:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/parse(_:)","kind":"symbol","title":"parse(_:)","role":"symbol","type":"topic","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Peek/ParserPrinter-Implementations":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/peek\/parserprinter-implementations","abstract":[],"type":"topic","role":"collectionGroup","title":"ParserPrinter Implementations","kind":"article"},"doc://co.pointfree.URLRouting/documentation/Parsing/Peek/init(_:)":{"abstract":[{"type":"text","text":"Construct a parser that runs the given parser, but does not consume any input."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/init(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/parsing\/peek\/init(_:)","title":"init(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"url":"\/documentation\/parsing","abstract":[],"role":"collection","kind":"symbol","type":"topic","title":"Parsing","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/Peek/print(_:into:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"((), ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data into something more nebulous."}],"url":"\/documentation\/parsing\/peek\/print(_:into:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/print(_:into:)","kind":"symbol","type":"topic","title":"print(_:into:)"}}}