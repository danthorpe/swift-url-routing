{"topicSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/init()-3wugv","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/init()-41jf5","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/init()-9bc09"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/ParserPrinter-Implementations"],"generated":true,"title":"Default Implementations"}],"metadata":{"modules":[{"name":"Parsing"}],"externalID":"s:7Parsing4RestV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"}],"roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"Rest"}],"role":"symbol","symbolKind":"struct","title":"Rest"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Rest","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Sl","text":"Collection","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"codeListing","syntax":"swift","code":["var input = \"Hello\"[...]","Rest().parse(&input)  \/\/ \"Hello\"","input                 \/\/ \"\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This parser fails if there is no input to consume:"}]},{"type":"codeListing","syntax":"swift","code":["try Rest().parse(\"\")","","\/\/\/ error: unexpected input","\/\/\/  --> input:1:1","\/\/\/ 1 |","\/\/\/   | ^ expected a non-empty input"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to allow for the possibility of an empty remaining input you can use the"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally","isActive":true},{"type":"text","text":" parser to parse an optional output value, or the "},{"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/replaceError(with:)","isActive":true},{"type":"text","text":" method"},{"type":"text","text":" "},{"type":"text","text":"to coalesce the error into a default output value."}]}]}],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"abstract":[{"type":"text","text":"A parser that consumes everything to the end of the collection and returns this subsequence as"},{"type":"text","text":" "},{"type":"text","text":"its output."}],"variants":[{"paths":["\/documentation\/parsing\/rest"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest"},"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Rest/ParserPrinter-Implementations":{"abstract":[],"role":"collectionGroup","title":"ParserPrinter Implementations","url":"\/documentation\/parsing\/rest\/parserprinter-implementations","type":"topic","kind":"article","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/ParserPrinter-Implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest/init()-41jf5":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/init()-41jf5","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"init()","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"url":"\/documentation\/parsing\/rest\/init()-41jf5","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"PrependableCollection"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Input.SubSequence"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","type":"reference","isActive":true},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"type":"topic","title":"ParserPrinter","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"url":"\/documentation\/parsing\/parserprinter"},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/Parser-Implementations","url":"\/documentation\/parsing\/rest\/parser-implementations","abstract":[],"type":"topic","role":"collectionGroup","kind":"article","title":"Parser Implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest/parse(_:)":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/parse(_:)","role":"symbol","type":"topic","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"title":"parse(_:)","url":"\/documentation\/parsing\/rest\/parse(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}]},"doc://co.pointfree.URLRouting/documentation/Parsing":{"url":"\/documentation\/parsing","abstract":[],"role":"collection","kind":"symbol","type":"topic","title":"Parsing","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest/replaceError(with:)":{"url":"\/documentation\/parsing\/rest\/replaceerror(with:)","abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/replaceError(with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ReplaceError","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"title":"replaceError(with:)","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Optionally":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Optionally"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally","url":"\/documentation\/parsing\/optionally","navigatorTitle":[{"kind":"identifier","text":"Optionally"}],"kind":"symbol","role":"symbol","title":"Optionally","abstract":[{"type":"text","text":"A parser that runs the given parser and succeeds with "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if it fails."}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest/init()-9bc09":{"url":"\/documentation\/parsing\/rest\/init()-9bc09","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/init()-9bc09","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"role":"symbol","title":"init()","abstract":[]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser"},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"}],"abstract":[{"text":"A parser that consumes everything to the end of the collection and returns this subsequence as","type":"text"},{"text":" ","type":"text"},{"text":"its output.","type":"text"}],"url":"\/documentation\/parsing\/rest","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest","title":"Rest","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Rest"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest/init()-3wugv":{"kind":"symbol","url":"\/documentation\/parsing\/rest\/init()-3wugv","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/init()-3wugv","type":"topic","abstract":[],"role":"symbol","title":"init()"}}}