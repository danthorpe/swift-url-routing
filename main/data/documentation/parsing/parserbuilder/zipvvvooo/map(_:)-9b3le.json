{"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVVOOO","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVVOOO\/Parser-Implementations"]]},"abstract":[{"type":"text","text":"Returns a parser that replaces the "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" output of this parser with the output of a given"},{"type":"text","text":" "},{"type":"text","text":"closure."}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVVOOO\/map(_:)-9b3le"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO11MapConstantV","kind":"typeIdentifier","text":"MapConstant","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/MapConstant"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" == "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"}]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser of outputs."}]}]},{"parameters":[{"name":"transform","content":[{"inlineContent":[{"text":"A closure that returns an output.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"A printer-friendly version of ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/map(_:)-2e6si","isActive":true},{"text":" for ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":" outputs, so long as","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NewOutput"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["enum Role: String {","  case admin","  case guest","  case member","}","","let role = OneOf {","  \"admin\".map { Role.admin }","  \"guest\".map { Role.guest }","  \"member\".map { Role.member }","}","","try role.parse(\"admin\")  \/\/ Role.admin","role.print(.guest)       \/\/ \"guest\""]}]}],"metadata":{"role":"symbol","extendedModule":"Parsing","externalID":"s:7Parsing6ParserPAAE3mapyAA7ParsersO11MapConstantVy_xqd__Gqd__yXEyt6OutputRtzlF::SYNTHESIZED::s:7Parsing13ParserBuilderO9ZipVVVOOOV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(() -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO11MapConstantV","kind":"typeIdentifier","text":"MapConstant"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}],"modules":[{"name":"Parsing"}],"title":"map(_:)","symbolKind":"method","roleHeading":"Instance Method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parserbuilder\/zipvvvooo\/map(_:)-9b3le"]}],"sections":[],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"title":"Parsers","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"url":"\/documentation\/parsing\/parsers","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserBuilder/ZipVVVOOO/map(_:)-9b3le":{"title":"map(_:)","url":"\/documentation\/parsing\/parserbuilder\/zipvvvooo\/map(_:)-9b3le","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVVOOO\/map(_:)-9b3le","kind":"symbol","role":"symbol","abstract":[{"text":"Returns a parser that replaces the ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":" output of this parser with the output of a given","type":"text"},{"text":" ","type":"text"},{"text":"closure.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(() -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MapConstant","preciseIdentifier":"s:7Parsing7ParsersO11MapConstantV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser/map(_:)-2e6si":{"role":"symbol","abstract":[{"text":"Returns a parser that replaces the ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" output of this parser with the output of a given","type":"text"},{"text":" ","type":"text"},{"text":"closure.","type":"text"}],"type":"topic","url":"\/documentation\/parsing\/parser\/map(_:)-2e6si","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/map(_:)-2e6si","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(() -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO11MapConstantV","text":"MapConstant"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}],"title":"map(_:)","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"url":"\/documentation\/parsing","abstract":[],"role":"collection","kind":"symbol","type":"topic","title":"Parsing","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserBuilder/ZipVVVOOO/Parser-Implementations":{"abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVVOOO\/Parser-Implementations","kind":"article","url":"\/documentation\/parsing\/parserbuilder\/zipvvvooo\/parser-implementations","role":"collectionGroup","type":"topic","title":"Parser Implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserBuilder/ZipVVVOOO":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipVVVOOO"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVVOOO","url":"\/documentation\/parsing\/parserbuilder\/zipvvvooo","navigatorTitle":[{"kind":"identifier","text":"ZipVVVOOO"}],"kind":"symbol","role":"symbol","title":"ParserBuilder.ZipVVVOOO","abstract":[],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserBuilder":{"url":"\/documentation\/parsing\/parserbuilder","abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ParserBuilder","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserBuilder","kind":"identifier"}],"title":"ParserBuilder","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/MapConstant":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MapConstant","kind":"identifier"}],"navigatorTitle":[{"text":"MapConstant","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/MapConstant","url":"\/documentation\/parsing\/parsers\/mapconstant","title":"Parsers.MapConstant","role":"symbol","abstract":[{"text":"A parser that replaces another parserâs ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":" output with some new output.","type":"text"}],"kind":"symbol","type":"topic"}}}