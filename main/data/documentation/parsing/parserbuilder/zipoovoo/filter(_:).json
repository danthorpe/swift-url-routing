{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"filter"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Filter","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/Filter","preciseIdentifier":"s:7Parsing7ParsersO6FilterV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"A parser that filters its output."}],"type":"paragraph"}]},{"parameters":[{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that takes an output from this parser and returns a Boolean","type":"text"},{"text":" ","type":"text"},{"text":"value indicating whether the output should be returned.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This method is similar to "},{"type":"codeVoice","code":"Sequence.filter"},{"type":"text","text":" in the Swift standard library, as well as"},{"type":"text","text":" "},{"type":"codeVoice","code":"Publisher.filter"},{"type":"text","text":" in the Combine framework."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This parser fails if the predicate is not satisfied on the output of the upstream parser. For example,"},{"type":"text","text":" "},{"type":"text","text":"the following parser consumes only even integers and so fails when an odd integer is used:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["var input = \"43 Hello, world!\"[...]","let number = try Int.parser().filter { $0.isMultiple(of: 2) }.parse(&input)","\/\/ error: processed value 43 failed to satisfy predicate","\/\/  --> input:1:1-2","\/\/ 1 | 43 Hello, world!","\/\/   | ^^ processed input"]}]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parserbuilder\/zipoovoo\/filter(_:)"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/Parser-Implementations"]]},"metadata":{"role":"symbol","symbolKind":"method","externalID":"s:7Parsing6ParserPAAE6filteryAA7ParsersO6FilterVy_xGSb6OutputQzcF::SYNTHESIZED::s:7Parsing13ParserBuilderO8ZipOOVOOV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"filter","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO6FilterV","text":"Filter"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"roleHeading":"Instance Method","modules":[{"name":"Parsing"}],"title":"filter(_:)","extendedModule":"Parsing"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/filter(_:)"},"kind":"symbol","abstract":[{"type":"text","text":"Returns a parser that filters output from this parser when its output does not satisfy the"},{"type":"text","text":" "},{"text":"given predicate.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/ParserBuilder/ZipOOVOO":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipOOVOO","kind":"identifier"}],"url":"\/documentation\/parsing\/parserbuilder\/zipoovoo","navigatorTitle":[{"text":"ZipOOVOO","kind":"identifier"}],"abstract":[],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO","kind":"symbol","title":"ParserBuilder.ZipOOVOO"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"url":"\/documentation\/parsing","abstract":[],"role":"collection","kind":"symbol","type":"topic","title":"Parsing","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserBuilder/ZipOOVOO/Parser-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/Parser-Implementations","title":"Parser Implementations","kind":"article","type":"topic","abstract":[],"url":"\/documentation\/parsing\/parserbuilder\/zipoovoo\/parser-implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserBuilder":{"url":"\/documentation\/parsing\/parserbuilder","abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ParserBuilder","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserBuilder","kind":"identifier"}],"title":"ParserBuilder","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"title":"Parsers","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"url":"\/documentation\/parsing\/parsers","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserBuilder/ZipOOVOO/filter(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"filter"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO6FilterV","text":"Filter"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOVOO\/filter(_:)","title":"filter(_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns a parser that filters output from this parser when its output does not satisfy the"},{"type":"text","text":" "},{"type":"text","text":"given predicate."}],"url":"\/documentation\/parsing\/parserbuilder\/zipoovoo\/filter(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/Filter":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Filter","kind":"identifier"}],"navigatorTitle":[{"text":"Filter","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/Filter","url":"\/documentation\/parsing\/parsers\/filter","title":"Parsers.Filter","role":"symbol","abstract":[{"text":"A parser that filters the output of an upstream parser when it does not satisfy a predicate.","type":"text"}],"kind":"symbol","type":"topic"}}}